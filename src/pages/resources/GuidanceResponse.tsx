/* eslint-disable no-unused-vars */
/* eslint-disable no-trailing-spaces */
// This file is auto-generated by generate_components so do not edit manually

/**
GuidanceResponse
    A guidance response is the formal response to a guidance request, including
    any output parameters returned by the evaluation, as well as the description
    of any proposed actions to be taken.
    If the element is present, it must have either a @value, an @id, or extensions
*/

import React from 'react';
import { Link } from 'react-router-dom';
import { TGuidanceResponse } from '../../types/resources/GuidanceResponse';

// Import all the partial resource
import Partials from '../../partials';
import { IdentifierSystem } from '../../utils/identifierSystem';

const GuidanceResponse = ({ resource }: { resource: TGuidanceResponse }): React.ReactElement => {
    const tagUUID = resource?.meta?.tag?.find((s) => s.system === IdentifierSystem.uuid)?.code;
    const uuid = tagUUID ? tagUUID : resource.id;

    return (
        <>
            <Link title="Direct link to Resource" to={`/4_0_0/${resource.resourceType}/${uuid}`}>
                {resource.resourceType}/{uuid}
            </Link>
            {
                resource.meta &&
                <Partials.Meta
                    meta={resource.meta}
                    name='Meta'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='meta'
                />
            }
            {
                resource.implicitRules &&
                <Partials.Uri
                    uri={resource.implicitRules}
                    name='Implicit Rules'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='implicit-rules'
                />
            }
            {
                resource.language &&
                <Partials.Code code={resource.language} name='Language'/>
            }
            {
                resource.text &&
                <Partials.Narrative
                    narrative={resource.text}
                    name='Text'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='text'
                />
            }
            {
                resource.extension &&
                <Partials.Extension
                    extension={resource.extension}
                    name='Extension'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='extension'
                />
            }
            {
                resource.modifierExtension &&
                <Partials.Extension
                    extension={resource.modifierExtension}
                    name='Modifier Extension'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='modifier-extension'
                />
            }
            {
                resource.requestIdentifier &&
                <Partials.Identifier
                    identifier={resource.requestIdentifier}
                    name='Request Identifier'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='request-identifier'
                />
            }
            {
                resource.identifier &&
                <Partials.Identifier
                    identifier={resource.identifier}
                    name='Identifier'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='identifier'
                />
            }
            {
                resource.moduleUri &&
                <Partials.Uri
                    uri={resource.moduleUri}
                    name='Module Uri'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='module-uri'
                />
            }
            {
                resource.moduleCanonical &&
                <Partials.Canonical
                    canonical={resource.moduleCanonical}
                    name='Module Canonical'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='module-canonical'
                />
            }
            {
                resource.moduleCodeableConcept &&
                <Partials.CodeableConcept
                    codeableConcept={resource.moduleCodeableConcept}
                    name='Module Codeable Concept'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='module-codeable-concept'
                />
            }
            {
                resource.status &&
                <Partials.Code code={resource.status} name='Status'/>
            }
            {
                resource.subject &&
                <Partials.Reference
                    reference={resource.subject}
                    name='Subject'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='subject'
                />
            }
            {
                resource.encounter &&
                <Partials.Reference
                    reference={resource.encounter}
                    name='Encounter'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='encounter'
                />
            }
            {
                resource.occurrenceDateTime &&
                <Partials.DateTime
                    dateTime={resource.occurrenceDateTime}
                    name='Occurrence Date Time'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='occurrence-date-time'
                />
            }
            {
                resource.performer &&
                <Partials.Reference
                    reference={resource.performer}
                    name='Performer'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='performer'
                />
            }
            {
                resource.reasonCode &&
                <Partials.CodeableConcept
                    codeableConcept={resource.reasonCode}
                    name='Reason Code'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='reason-code'
                />
            }
            {
                resource.reasonReference &&
                <Partials.Reference
                    reference={resource.reasonReference}
                    name='Reason Reference'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='reason-reference'
                />
            }
            {
                resource.note &&
                <Partials.Annotation
                    annotation={resource.note}
                    name='Note'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='note'
                />
            }
            {
                resource.evaluationMessage &&
                <Partials.Reference
                    reference={resource.evaluationMessage}
                    name='Evaluation Message'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='evaluation-message'
                />
            }
            {
                resource.outputParameters &&
                <Partials.Reference
                    reference={resource.outputParameters}
                    name='Output Parameters'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='output-parameters'
                />
            }
            {
                resource.result &&
                <Partials.Reference
                    reference={resource.result}
                    name='Result'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='result'
                />
            }
        </>
    );
};

export default GuidanceResponse;
