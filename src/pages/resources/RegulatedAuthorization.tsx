/* eslint-disable no-unused-vars */
/* eslint-disable no-trailing-spaces */
// This file is auto-generated by generate_components so do not edit manually

/**
RegulatedAuthorization
    Regulatory approval, clearance or licencing related to a regulated product,
    treatment, facility or activity that is cited in a guidance, regulation, rule
    or legislative act. An example is Market Authorization relating to a Medicinal
    Product.
    If the element is present, it must have either a @value, an @id, or extensions
*/

import React from 'react';
import { Link } from 'react-router-dom';
import { TRegulatedAuthorization } from '../../types/resources/RegulatedAuthorization';

// Import all the partial resource
import Partials from '../../partials';
import { IdentifierSystem } from '../../utils/identifierSystem';

const RegulatedAuthorization = ({ resource }: { resource: TRegulatedAuthorization }): React.ReactElement => {
    const tagUUID = resource?.meta?.tag?.find((s) => s.system === IdentifierSystem.uuid)?.code;
    const uuid = tagUUID ? tagUUID : resource.id;

    return (
        <>
            <Link title="Direct link to Resource" to={`/4_0_0/${resource.resourceType}/${uuid}`}>
                {resource.resourceType}/{uuid}
            </Link>
            {
                resource.meta &&
                <Partials.Meta
                    meta={resource.meta}
                    name='Meta'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='meta'
                />
            }
            {
                resource.implicitRules &&
                <Partials.Uri
                    uri={resource.implicitRules}
                    name='Implicit Rules'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='implicit-rules'
                />
            }
            {
                resource.language &&
                <Partials.Code code={resource.language} name='Language'/>
            }
            {
                resource.text &&
                <Partials.Narrative
                    narrative={resource.text}
                    name='Text'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='text'
                />
            }
            {
                resource.extension &&
                <Partials.Extension
                    extension={resource.extension}
                    name='Extension'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='extension'
                />
            }
            {
                resource.modifierExtension &&
                <Partials.Extension
                    extension={resource.modifierExtension}
                    name='Modifier Extension'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='modifier-extension'
                />
            }
            {
                resource.identifier &&
                <Partials.Identifier
                    identifier={resource.identifier}
                    name='Identifier'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='identifier'
                />
            }
            {
                resource.subject &&
                <Partials.Reference
                    reference={resource.subject}
                    name='Subject'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='subject'
                />
            }
            {
                resource.type &&
                <Partials.CodeableConcept
                    codeableConcept={resource.type}
                    name='Type'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='type'
                />
            }
            {
                resource.description &&
                <Partials.Markdown
                    markdown={resource.description}
                    name='Description'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='description'
                />
            }
            {
                resource.region &&
                <Partials.CodeableConcept
                    codeableConcept={resource.region}
                    name='Region'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='region'
                />
            }
            {
                resource.status &&
                <Partials.CodeableConcept
                    codeableConcept={resource.status}
                    name='Status'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='status'
                />
            }
            {
                resource.statusDate &&
                <Partials.DateTime
                    dateTime={resource.statusDate}
                    name='Status Date'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='status-date'
                />
            }
            {
                resource.validityPeriod &&
                <Partials.Period
                    period={resource.validityPeriod}
                    name='Validity Period'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='validity-period'
                />
            }
            {
                resource.intendedUse &&
                <Partials.CodeableConcept
                    codeableConcept={resource.intendedUse}
                    name='Intended Use'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='intended-use'
                />
            }
            {
                resource.basis &&
                <Partials.CodeableConcept
                    codeableConcept={resource.basis}
                    name='Basis'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='basis'
                />
            }
            {
                resource.holder &&
                <Partials.Reference
                    reference={resource.holder}
                    name='Holder'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='holder'
                />
            }
            {
                resource.regulator &&
                <Partials.Reference
                    reference={resource.regulator}
                    name='Regulator'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='regulator'
                />
            }
        </>
    );
};

export default RegulatedAuthorization;
