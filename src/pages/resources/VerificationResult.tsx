// This file is auto-generated by generate_components so do not edit manually

/**
VerificationResult
    Describes validation requirements, source(s), status and dates for one or more
    elements.
    If the element is present, it must have either a @value, an @id, or extensions
*/

import React from 'react';
import { Link } from 'react-router-dom';
import { TVerificationResult } from '../../types/resources/VerificationResult';

// Import all the partial resource
import Partials from '../../partials';
import { IdentifierSystem } from '../../utils/identifierSystem';

const VerificationResult = ({ resource }: { resource: TVerificationResult }): React.ReactElement => {
    const tagUUID = resource?.meta?.tag?.find((s) => s.system === IdentifierSystem.uuid)?.code;
    const uuid = tagUUID ? tagUUID : resource.id;

    return (
        <>
            <Link title="Direct link to Resource" to={`/4_0_0/${resource.resourceType}/${uuid}`}>
                {resource.resourceType}/{uuid}
            </Link>
            {
                resource.meta &&
                <Partials.Meta
                    meta={resource.meta}
                    name='Meta'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='meta'
                />
            }
            {
                resource.implicitRules &&
                <Partials.Uri
                    uri={resource.implicitRules}
                    name='Implicit Rules'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='implicit-rules'
                />
            }
            {
                resource.language &&
                <Partials.Code code={resource.language} name='Language'/>
            }
            {
                resource.text &&
                <Partials.Narrative
                    narrative={resource.text}
                    name='Text'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='text'
                />
            }
            {
                resource.extension &&
                <Partials.Extension
                    extension={resource.extension}
                    name='Extension'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='extension'
                />
            }
            {
                resource.modifierExtension &&
                <Partials.Extension
                    extension={resource.modifierExtension}
                    name='Modifier Extension'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='modifier-extension'
                />
            }
            {
                resource.target &&
                <Partials.Reference
                    reference={resource.target}
                    name='Target'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='target'
                />
            }
            {
                resource.need &&
                <Partials.CodeableConcept
                    codeableConcept={resource.need}
                    name='Need'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='need'
                />
            }
            {
                resource.status &&
                <Partials.Code code={resource.status} name='Status'/>
            }
            {
                resource.statusDate &&
                <Partials.DateTime
                    dateTime={resource.statusDate}
                    name='Status Date'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='status-date'
                />
            }
            {
                resource.validationType &&
                <Partials.CodeableConcept
                    codeableConcept={resource.validationType}
                    name='Validation Type'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='validation-type'
                />
            }
            {
                resource.validationProcess &&
                <Partials.CodeableConcept
                    codeableConcept={resource.validationProcess}
                    name='Validation Process'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='validation-process'
                />
            }
            {
                resource.frequency &&
                <Partials.Timing
                    timing={resource.frequency}
                    name='Frequency'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='frequency'
                />
            }
            {
                resource.lastPerformed &&
                <Partials.DateTime
                    dateTime={resource.lastPerformed}
                    name='Last Performed'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='last-performed'
                />
            }
            {
                resource.failureAction &&
                <Partials.CodeableConcept
                    codeableConcept={resource.failureAction}
                    name='Failure Action'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='failure-action'
                />
            }
            {
                resource.validator &&
                <Partials.Reference
                    reference={resource.validator}
                    name='Validator'
                    resourceType={resource.resourceType}
                    id={uuid}
                    searchParameter='validator'
                    field='organization'
                />
            }
        </>
    );
};

export default VerificationResult;
