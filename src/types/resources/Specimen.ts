// This file is auto-generated by generate_types so do not edit manually

import { TMeta } from '../partials/Meta';
import { TUri } from '../simpleTypes/Uri';
import { TNarrative } from '../partials/Narrative';
import { TResourceContainer } from '../simpleTypes/ResourceContainer';
import { TExtension } from '../partials/Extension';
import { TIdentifier } from '../partials/Identifier';
import { TCodeableConcept } from '../partials/CodeableConcept';
import { TReference } from '../partials/Reference';
import { TDateTime } from '../simpleTypes/DateTime';
import { TSpecimenCollection } from '../partials/SpecimenCollection';
import { TSpecimenProcessing } from '../partials/SpecimenProcessing';
import { TSpecimenContainer } from '../partials/SpecimenContainer';
import { TAnnotation } from '../partials/Annotation';

export type TSpecimen = {
    resourceType?: String;
    id?: String;
    meta?: TMeta;
    implicitRules?: TUri;
    language?: String;
    text?: TNarrative;
    contained?: TResourceContainer[];
    extension?: TExtension[];
    modifierExtension?: TExtension[];
    identifier?: TIdentifier[];
    accessionIdentifier?: TIdentifier;
    status?: String;
    type?: TCodeableConcept;
    subject?: TReference;
    receivedTime?: TDateTime;
    parent?: TReference[];
    request?: TReference[];
    collection?: TSpecimenCollection;
    processing?: TSpecimenProcessing[];
    container?: TSpecimenContainer[];
    condition?: TCodeableConcept[];
    note?: TAnnotation[];
};

