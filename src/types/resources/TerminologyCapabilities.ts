// This file is auto-generated by generate_types so do not edit manually

import { TMeta } from '../partials/Meta';
import { TUri } from '../simpleTypes/Uri';
import { TNarrative } from '../partials/Narrative';
import { TResourceContainer } from '../simpleTypes/ResourceContainer';
import { TExtension } from '../partials/Extension';
import { TDateTime } from '../simpleTypes/DateTime';
import { TContactDetail } from '../partials/ContactDetail';
import { TMarkdown } from '../simpleTypes/Markdown';
import { TUsageContext } from '../partials/UsageContext';
import { TCodeableConcept } from '../partials/CodeableConcept';
import { TTerminologyCapabilitiesSoftware } from '../partials/TerminologyCapabilitiesSoftware';
import { TTerminologyCapabilitiesImplementation } from '../partials/TerminologyCapabilitiesImplementation';
import { TTerminologyCapabilitiesCodeSystem } from '../partials/TerminologyCapabilitiesCodeSystem';
import { TTerminologyCapabilitiesExpansion } from '../partials/TerminologyCapabilitiesExpansion';
import { TTerminologyCapabilitiesValidateCode } from '../partials/TerminologyCapabilitiesValidateCode';
import { TTerminologyCapabilitiesTranslation } from '../partials/TerminologyCapabilitiesTranslation';
import { TTerminologyCapabilitiesClosure } from '../partials/TerminologyCapabilitiesClosure';

export type TTerminologyCapabilities = {
    resourceType?: String;
    id?: String;
    meta?: TMeta;
    implicitRules?: TUri;
    language?: String;
    text?: TNarrative;
    contained?: TResourceContainer[];
    extension?: TExtension[];
    modifierExtension?: TExtension[];
    url?: TUri;
    version?: String;
    name?: String;
    title?: String;
    status: String;
    experimental?: Boolean;
    date: TDateTime;
    publisher?: String;
    contact?: TContactDetail[];
    description?: TMarkdown;
    useContext?: TUsageContext[];
    jurisdiction?: TCodeableConcept[];
    purpose?: TMarkdown;
    copyright?: TMarkdown;
    kind: String;
    software?: TTerminologyCapabilitiesSoftware;
    implementation?: TTerminologyCapabilitiesImplementation;
    lockedDate?: Boolean;
    codeSystem?: TTerminologyCapabilitiesCodeSystem[];
    expansion?: TTerminologyCapabilitiesExpansion;
    codeSearch?: String;
    validateCode?: TTerminologyCapabilitiesValidateCode;
    translation?: TTerminologyCapabilitiesTranslation;
    closure?: TTerminologyCapabilitiesClosure;
};

