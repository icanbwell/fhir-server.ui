// This file is auto-generated by generate_types so do not edit manually

import { TMeta } from '../partials/Meta';
import { TUri } from '../simpleTypes/Uri';
import { TNarrative } from '../partials/Narrative';
import { TResourceContainer } from '../simpleTypes/ResourceContainer';
import { TExtension } from '../partials/Extension';
import { TIdentifier } from '../partials/Identifier';
import { TDateTime } from '../simpleTypes/DateTime';
import { TContactDetail } from '../partials/ContactDetail';
import { TMarkdown } from '../simpleTypes/Markdown';
import { TUsageContext } from '../partials/UsageContext';
import { TCodeableConcept } from '../partials/CodeableConcept';
import { TTestScriptOrigin } from '../partials/TestScriptOrigin';
import { TTestScriptDestination } from '../partials/TestScriptDestination';
import { TTestScriptMetadata } from '../partials/TestScriptMetadata';
import { TTestScriptFixture } from '../partials/TestScriptFixture';
import { TReference } from '../partials/Reference';
import { TTestScriptVariable } from '../partials/TestScriptVariable';
import { TTestScriptSetup } from '../partials/TestScriptSetup';
import { TTestScriptTest } from '../partials/TestScriptTest';
import { TTestScriptTeardown } from '../partials/TestScriptTeardown';

export type TTestScript = {
    resourceType?: String;
    id?: String;
    meta?: TMeta;
    implicitRules?: TUri;
    language?: String;
    text?: TNarrative;
    contained?: TResourceContainer[];
    extension?: TExtension[];
    modifierExtension?: TExtension[];
    url: TUri;
    identifier?: TIdentifier;
    version?: String;
    name: String;
    title?: String;
    status: String;
    experimental?: Boolean;
    date?: TDateTime;
    publisher?: String;
    contact?: TContactDetail[];
    description?: TMarkdown;
    useContext?: TUsageContext[];
    jurisdiction?: TCodeableConcept[];
    purpose?: TMarkdown;
    copyright?: TMarkdown;
    origin?: TTestScriptOrigin[];
    destination?: TTestScriptDestination[];
    metadata?: TTestScriptMetadata;
    fixture?: TTestScriptFixture[];
    profile?: TReference[];
    variable?: TTestScriptVariable[];
    setup?: TTestScriptSetup;
    test?: TTestScriptTest[];
    teardown?: TTestScriptTeardown;
};

