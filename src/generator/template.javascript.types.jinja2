// This file is auto-generated by generate_types so do not edit manually

{% for property in fhir_entity.properties %}
{% if not property.is_v2_supported and not isBaseType(property.cleaned_type) %}
    {% if property.cleaned_type == "Extension" %}
    {% if fhir_entity.cleaned_name != "Extension" %}
        {{- 'import' -}}{{- ' { TExtension } ' -}} from '../partials/Extension';
    {% endif %}
    {% elif not property.is_code and property.cleaned_type | replace(".","") != fhir_entity.cleaned_name %}
        {{- 'import' -}}{{- ' { T' + camelToPascalCase(camelToPascalCase(property.cleaned_type | replace(".",""))) + ' } ' -}}
        from '../{{- getTypesFolder(property.cleaned_type | replace(".","")) -}}/
        {{- camelToPascalCase(property.cleaned_type | replace(".","")) -}}';
    {% endif %}
{% endif %}
{%  endfor %}

export type {{ 'T' + fhir_entity.cleaned_name }} = {
{% if fhir_entity.is_resource %}
    resourceType?: String;
{% endif %}
{% for property in fhir_entity.properties %}
{% if not property.is_v2_supported %}
    {{ property.javascript_clean_name -}}
    {% if property.optional -%}
        {{- '?' -}}
    {% endif %}
    {{- ': ' -}}
    {% if property.cleaned_type == "Extension" %}
        {{- 'TExtension' -}}
    {% elif property.is_code %}
        {{- 'String' -}}
    {% elif isBaseType(property.cleaned_type | replace(".","")) %}
        {{- camelToPascalCase(property.cleaned_type | replace(".","")) -}}
    {% else %}
        {{- 'T' + camelToPascalCase(property.cleaned_type | replace(".","")) -}}
    {% endif %}
    {% if property.is_list -%}
        {{ '[]' -}}
    {% endif -%}
    {{- ';' }}
{% endif %}
{%  endfor %}
{% if fhir_entity.cleaned_name == "Reference"  %}
    {% for extra_property in extra_properties_for_reference %}
    {{ extra_property.name }}
    {{- '?: ' -}}
    {% if isBaseType(extra_property.type) %}
    {{- camelToPascalCase(extra_property.type) }};
    {% else %}
    {{- 'T' + camelToPascalCase(extra_property.type) }};
    {% endif %}
    {%  endfor %}
{%  endif %}
};

